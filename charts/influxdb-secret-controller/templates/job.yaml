
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": "{{ .Values.job.hook }}"
    "helm.sh/hook-weight": "{{ .Values.job.weight }}"
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "infuxdb_secret_controller.serviceAccountName" . }}
      containers:
      - name: "{{ .Release.Name }}-post-install-create-token-secrets"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: DEPLOYMENT_NAME
          value: "{{ .Release.Name }}"
        - name: CONFIG_PATH
          value: /data/config.yaml
        {{- if .Values.debug }}
        - name: DEBUG
          value: "true"
        {{- end }}
        {{- if .Values.env}}
        {{- range $env := .Values.env }}
        - name: {{ $env.name }}
        {{- if $env.value }}
          value: {{ $env.value | quote }}
        {{- end }}
        {{- if $env.valueFrom }}
          valueFrom: 
            {{- toYaml $env.valueFrom | nindent 12 }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if .Values.envFromSecrets }}
        envFrom:
            {{- range .Values.envFromSecrets }}
            - secretRef:
                name: {{ . }}
            {{- end }}
        {{- end }}
        resources:
        {{- toYaml .Values.resources | nindent 12 }}
        securityContext:
        {{- toYaml .Values.securityContext | nindent 12 }}
        volumeMounts:
        - name: config
          mountPath: /data
        command: []
      volumes:
      - name: config
        configMap:
          name: "{{ .Release.Name }}-config"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
